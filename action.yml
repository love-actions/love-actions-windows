name: Love actions for Windows
description: Windows CI/CD for LÃ–VE based games
branding:
  icon: "heart"
  color: "blue"
inputs:
  icon-path:
    description: |
      Path to the icon
      Would be used in building exe
    required: false
    default: "./icon.ico"
  rc-path:
    description: |
      Path to the .rc file
      will be used to set the metadata of the exe
      If it is not provided, the compiled exe file will not have any metadata defined by the .rc file
    required: false
  love-package:
    description: |
      Love package
      Would be used to assemble the executable
    required: false
    default: "./game.love"
  extra-assets-x86:
    description: |
      List of folder & file paths to be added to x86 product folder
      Don't need global quotes, separated by spaces
      Looks like: ./assets/ ./logics/ ./main.lua ./config.lua
    required: false
  extra-assets-x64:
    description: |
      List of folder & file paths to be added to x64 product folder
      Don't need global quotes, separated by spaces
      Looks like: ./assets/ ./logics/ ./main.lua ./config.lua
    required: false
  product-name:
    description: |
      Base name of the package
      Would be used to rename products
    required: false
    default: "love_app"
  output-folder:
    description: |
      Packages output folder
      All packages would be placed here
    required: false
    default: "./build"
outputs:
  package-paths:
    description: |
      Paths to the built packages in a bash list
      Would be paths relative to repository root, separated by spaces
      Looks like: ./build/game.apk ./build/game.abb
    value: ${{ steps.gather-packages.outputs.package-paths }}
runs:
  using: "composite"
  steps:
    - name: Create directories
      shell: bash
      run: |
        mkdir ./love-actions-windows/
        mkdir -p ${{ inputs.output-folder }}
    - name: Download love and ResourceHacker
      env:
        TEMP_PATH: ./temp.zip
      shell: bash
      run: |
        cd ./love-actions-windows/

        curl -L --retry 5 https://github.com/love2d/love/releases/download/11.4/love-11.4-win32.zip -o ${{ env.TEMP_PATH }}
        7z x ${{ env.TEMP_PATH }} -o./
        rm ${{ env.TEMP_PATH }}

        curl -L --retry 5 https://github.com/love2d/love/releases/download/11.4/love-11.4-win64.zip -o ${{ env.TEMP_PATH }}
        7z x ${{ env.TEMP_PATH }} -o./
        rm ${{ env.TEMP_PATH }}

        curl -L --retry 5 http://www.angusj.com/resourcehacker/resource_hacker.zip -o ${{ env.TEMP_PATH }}
        7z x ${{ env.TEMP_PATH }} -o./
        rm ${{ env.TEMP_PATH }}
    - name: Assemble product folders
      shell: pwsh
      run: |
        mv ${{ inputs.love-package }} ./love-actions-windows/game.love
        cp ${{ inputs.icon-path }} ./love-actions-windows/icon.ico

        cd ./love-actions-windows/

        cmd /c copy /b .\love-11.4-win32\love.exe + .\game.love .\love-11.4-win32\${{ inputs.product-name }}.exe

        del .\love-11.4-win32\love.exe
        del .\love-11.4-win32\lovec.exe
        del .\love-11.4-win32\game.ico
        del .\love-11.4-win32\love.ico
        del .\love-11.4-win32\changes.txt
        del .\love-11.4-win32\readme.txt

        cmd /c copy /b .\love-11.4-win64\love.exe + .\game.love .\love-11.4-win64\${{ inputs.product-name }}.exe

        del .\love-11.4-win64\love.exe
        del .\love-11.4-win64\lovec.exe
        del .\love-11.4-win64\game.ico
        del .\love-11.4-win64\love.ico
        del .\love-11.4-win64\changes.txt
        del .\love-11.4-win64\readme.txt

        cmd /c '".\ResourceHacker.exe" -open ".\love-11.4-win32\${{ inputs.product-name }}.exe" -save ".\love-11.4-win32\${{ inputs.product-name }}.exe" -action delete -mask ICONGROUP,,'
        cmd /c '".\ResourceHacker.exe" -open ".\love-11.4-win32\${{ inputs.product-name }}.exe" -save ".\love-11.4-win32\${{ inputs.product-name }}.exe" -action delete -mask VERSIONINFO,,'
        cmd /c '".\ResourceHacker.exe" -open ".\love-11.4-win32\${{ inputs.product-name }}.exe" -save ".\love-11.4-win32\${{ inputs.product-name }}.exe" -action addoverwrite -res ".\icon.ico" -mask ICONGROUP,1,'

        cmd /c '".\ResourceHacker.exe" -open ".\love-11.4-win64\${{ inputs.product-name }}.exe" -save ".\love-11.4-win64\${{ inputs.product-name }}.exe" -action delete -mask ICONGROUP,,'
        cmd /c '".\ResourceHacker.exe" -open ".\love-11.4-win64\${{ inputs.product-name }}.exe" -save ".\love-11.4-win64\${{ inputs.product-name }}.exe" -action delete -mask VERSIONINFO,,'
        cmd /c '".\ResourceHacker.exe" -open ".\love-11.4-win64\${{ inputs.product-name }}.exe" -save ".\love-11.4-win64\${{ inputs.product-name }}.exe" -action addoverwrite -res ".\icon.ico" -mask ICONGROUP,1,'

        if(${{ inputs.rc-path }})
        {
          cmd /c '".\ResourceHacker.exe" -open "${{ inputs.rc-path }}" -save ".\${{ inputs.product-name }}.res" -action compile'

          cmd /c '".\ResourceHacker.exe" -open ".\love-11.4-win32\${{ inputs.product-name }}.exe" -save ".\love-11.4-win32\${{ inputs.product-name }}.exe" -action addoverwrite -res ".\${{ inputs.product-name }}.res" -mask VERSIONINFO,1,'

          cmd /c '".\ResourceHacker.exe" -open ".\love-11.4-win64\${{ inputs.product-name }}.exe" -save ".\love-11.4-win64\${{ inputs.product-name }}.exe" -action addoverwrite -res ".\${{ inputs.product-name }}.res" -mask VERSIONINFO,1,'
        }
    - name: Add extra assets for x86
      if: "${{ inputs.extra-assets-x86 != '' }}"
      shell: bash
      run: |
        cp -r -f ${{ inputs.extra-assets-x86 }} ./love-actions-windows/love-11.4-win32/
    - name: Add extra assets for x64
      if: "${{ inputs.extra-assets-x64 != '' }}"
      shell: bash
      run: |
        cp -r -f ${{ inputs.extra-assets-x64 }} ./love-actions-windows/love-11.4-win64/
    - name: Gather packages in output folder
      id: gather-packages
      shell: bash
      run: |
        7z a -tzip ${{ inputs.output-folder }}/${{ inputs.product-name }}_x86.zip ./love-actions-windows/love-11.4-win32/*
        7z a -tzip ${{ inputs.output-folder }}/${{ inputs.product-name }}_x64.zip ./love-actions-windows/love-11.4-win64/*
        echo "package-paths=$(ls -d ${{ inputs.output-folder }}/* | tr '\r\n' ' ')" >> $GITHUB_OUTPUT
    - name: Cleanup
      shell: bash
      run: |
        rm -rf ./love-actions-windows/
